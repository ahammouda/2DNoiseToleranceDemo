%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 522.000000 505.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.15.5 (Build 19F101) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 522 505
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 522 505
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: TimesNewRomanPSMT
%!FontType1-1.0: TimesNewRomanPSMT 1.0000.5.0100
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin
/FontName /TimesNewRomanPSMT def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /zero put
dup 34 /one put
dup 35 /hyphen put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1164 1 index div -628 2 index div 4096 3 index div 2062 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000007DA6670676D0000000000000878000005B1676C79660000000000000E2C000006226865616400000000000014500000003668686561000000000000148800000024686D747800000000000014AC0000001C6C6F636100000000000014C8000000106D61787000000000000014D8000000207072657000000000000014F800000F45058E0000054C001F054C001C0394001B0000FFE10000FFE40000FFE8FE4AFFFC056B0023FE6AFFE00313000000AD000000AD0000000000250096009F002400F0013100C200C0004A00A6004100500094004700CF00AF000E007901CB00040023004400A80025011F0002004600170105009900D9005C007200E500E00028004B00DE011200240045007000160039FFE90016004B0088FFB900D9000A004300AE00BA016C0153002F00430048022C012B0025008FFFC000170028FFCDFFD80025009D00E50124FFB10048009D00E600110027007F00910012006A00CAFFFC00000024006200A7017C01E900210060008B0434048AFF6B003B00B500D5014BFF6B004D007905D809B5006C009100A3011701C0FFDFFFE700BE04010065007F00820088009900B200C0022E034305A000200026003D004E00610065007B00D9011301310340FF27FF42FF99004E00A700F2022B02C603070011002B0049005F008D00A100AF00D600E400F5010B0135019D01AB01AB01D101EE05D80000004B0075007A0080009D00A600A700AC00B9013101310217021700020017002900550080008F00A500B200B300D0014B015901C001C103A50530FE3FFF14FF15FFE7FFFF002A00580099009F00C100E400F40130015901AB01AB03220374041E04740532FD81004D0064009C00D000D100D600DE00E500F500F8012A012A01E1027E027FFF57FFA8FFE500000008001F00380051005A006F0076007700A200C000C200C400F101FB0209027E02CF04C5057A05F0FF92001200260042004B004F005100530064008B00AE00B200B800B800D600F50111012001310138014E01520167018F019601B801D901D902060221027102EA03B003CB03DC04360505FF3A00120016001E001F002300570068006C007E0088009200A500A800C500C901150126012D013001D601D901F6023B0244024402A302CF02DE0385038F04FC0586FEE0FEEBFEFBFF8A0007004400470058007500AA00E400EF011601200129016A017301E3027E029002B4030E0310032303350341035403590388039403C803CE047204AB04DA0549056105AB0761FE6EFED1FF4BFF84000000010006001E0027002C0034003700620066006A006B006C007000700072007C0081008A008E0091009200A000AB00B800BF00C900D500DD00EC00F40100012101300169016A016D017C0185018E018E







445958B9021E0024455258B90024021E4459594BB8020153205C58B9010F00224544B1222245445958B90C00010F455258B9010F0C004459594BB01C53205C58B125254544B12C2545445958B13725455258B125374459594BB0AB53205C58B125254544B1232545445958B901590025455258B9002501594459594BB8010153205C58B125254544B1282545445958B902080025455258B9002502084459592B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B65422B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B01B361DC6463456523456023456560234560B08B766818B080622020B164DC4565234520B003266062636820B003266165B0DC236544B064234420B161634565234520B003266062636820B003266165B063236544B0612344B10063455458B163406544B26140614523614459B3A67F434B456523456023456560234560B089766818B080622020B1437F4565234520B003266062636820B003266165B07F236544B043234420B1A64B4565234520B003266062636820B003266165B04B236544B0A62344B1004B455458B14B406544B2A640A645236144594B5242014B5058B108004259435C58B108004259B3020B0A124358601B2159421610703EB0124358B93B21187E1BBA040001A8000B2B59B00C2342B00D2342B0124358B92D412D411BBA04000400000B2B59B00E2342B00F2342B0124358B9187E3B211BBA01A80400000B2B59B0102342B0112342002B0018456944456944456944456944737373747373737475752B7373747475184569447373742B4BB021534BB046515A58B03CB03C45B040604459012B2B2B2B757575757575757543584010BF3CCF3C026F3C7F3C8F3C9F3CAF3C0575755943584012BF22CF22025F226F227F228F229F22AF2206757559435C58B6403C9F22EF220375592B2B01747474744544737374747575454473454473744544737475737373737300757575737575752B2B757575752B752B435841220063032D00010003032D0013032D0023032D0033032D0053032D000500C3032D00D3032D00E3032D00F3032D00040083032D0093032D00A3032D00B3032D0004032D032D4518694474747575592B4358B900180332B330353238B80332B361663238B80332B3535A3238B80332B3454E3238B80332B33C413218B80332B23F330A410F0332000100BA033200CA033200DA033200EA033200FA03320005033203324518694474752B2B2B2B2B2B597300732B012B7575002B2B2B74002B2B2B732B74012B002B2B017373737474732B2B00732B2B002B2B2B017374732B01
2B2B012B2B2B2B2B2B2B2B2B2B2B2B2B2B00017375007373004569440073730173742B2B2B2B2B732B00732B752B2B732B2B2B2B2B2B2B2B2B73742B2B000000
00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/hyphen 1 def
/zero 2 def
/one 3 def
/i 4 def
/acute 5 def
/glyph3379 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-1164 -628 4096 2062} readonly def
/UniqueID 4291674 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68263D9BC79CC22555FC30C8CC45F0EA89DF8E2797BDD3A4E7AA688184E79CCAB722EE0F2B205B93D04111BD1EDC6CB0946329DB1262E7BD3755730F1700B68D26A053041C692C5A001ADBF56582B10271E7331F05AACA7609F8624349183074867AABE4D7682140764CB0733D172A79EB1DC56371BAC5BE7D62088856CEB7C3C48698AEB773CAE86FB72711CC20A8364927205E8BD3E5A5C97FF4DA911211F30AC6DC7F6EA3539AD6C9241CDB1D7C7852DF1D2D3C386C5940E5F2888B29FC66B4FC572431FC252CCFB364FDD805F18126807CC08C0FD1B4DAE9CC9CADE3C36A780DDCADD7D5EE5D007263A976E4F8495C4224887F44D40F05CB67C65CF84BDD54B5CA892A6AE9103CB5CBC6FCCA80351F664CD97F808621828553D21D4ECA303E3FC249C97A675F28D810F9C4B7AC14E766DDB995977FA66C4F112747522C716C723A79A1A161E392591A9A771A1E9DF0FE30C85D7D47C02C966F5C772B6D7AE4EFD75551800BB547276A62E9952D262F68E085A5916885E35C67E88D4FAF75128B715A0DE7BDB49830C6EE706248E34FB06654810F5C5EE6A94CE2D378E7FECD2061441A97F9423DEA34E796EEA28C745260F9B4BA8F283E76CE28EE38976FB926AF2CC14DAD702106EC1105ACC92006922363537DE2191804375764CE4272AB4A478606BA1B85A1C8AC1B7CB4E08E159F696D6B8C8B8594543A2FA74939BDF82427824AB8C7E442F47045CF88003E0C6342A4F65E885B8C13266F78F6AAE2FA3AE62E11CD5E76CEDF20E1EBE28C9B26771BE81F49AC8E62D0791A449FD7070007C4265
B38B30C5474133B7692F601BED1215F0025DF277497398D56DED2E2F46FAA46C8D00A4C340B1A9403CDC825496DD20581FC7F1C2C597A6071D91859C8618B0A6BF707DFF486CE753A60D17152044628E2A4DCCCA2A1EAE170032819794E54C637D0C8D89A9C7793FC62E9EE0DCC937771563E2E3F9F090F64E01D429B35226884AC019CE33AEE8A46DE38C0AD0F55AC6B76D049B7F4728783E233F023D462CE76A60A38FA2D431D333BA4E0C65FE28EF1ABD547CD58A39BBDDBB44510A5DA6665F6D845D77C8FB07D06E292B0F440AB19A0F5BDED1B37501E9C5EB9657120E51F13395AE6B9C096BC32D02304570D41CC2BAD3FBADD600880A7486901173A9FB429826A312B93620B5D8F4A9E005C5BFB00E0BCD26A1042B1D3A826EEE644466B7DE2E55C4A268B0DAA85CBE17344BB16010FDD73315955BEA0A894A90216A9B7017906D4AAB4AE9E35CE184F11A44A3DFA37FEEC2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/TimesNewRomanPSMT cguidfix
/F1.1/TimesNewRomanPSMT renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 522 505 rc
0 505 m
522 505 l
522 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-299 651 m
856 651 l
856 -132 l
-299 -132 l
h
-299 651 m
f
/Cs1 SC
0 sc
1 0 0 -1 -299 651 cm
/F1.1[ 34 0 0 -34 0 0]sf
577.59845 431.8504 m
(!!)[ 17.000000 0.000000 ] xS
722.16534 437.51968 m
("!)[ 17.000000 0.000000 ] xS
424.52756 431.8504 m
(#"!)[ 11.322266 17.000000 0.000000 ] xS
577.59845 576.4173 m
(!#")[ 17.000000 11.322266 0.000000 ] xS
722.16534 576.4173 m
("#")[ 17.000000 11.322266 0.000000 ] xS
424.52756 576.4173 m
(#"#")[ 11.322266 17.000000 11.322266 0.000000 ] xS
577.59845 290.1181 m
(!")[ 17.000000 0.000000 ] xS
722.16534 290.1181 m
("")[ 15.738281 0.000000 ] xS
424.52756 290.1181 m
(#"")[ 11.322266 15.738281 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
713.67242 250.10712 m
716.43988 252.87462 716.43988 257.3616 713.67242 260.12909 c
710.90491 262.89661 706.41791 262.89661 703.65045 260.12909 c
700.88293 257.3616 700.88293 252.87462 703.65045 250.10712 c
706.41791 247.33961 710.90491 247.33961 713.67242 250.10712 c
S
713.67242 391.83942 m
716.43988 394.6069 716.43988 399.09387 713.67242 401.86139 c
710.90491 404.62888 706.41791 404.62888 703.65045 401.86139 c
700.88293 399.09387 700.88293 394.6069 703.65045 391.83942 c
706.41791 389.0719 710.90491 389.0719 713.67242 391.83942 c
S
713.67242 533.57172 m
716.43988 536.33917 716.43988 540.82617 713.67242 543.59369 c
710.90491 546.36115 706.41791 546.36115 703.65045 543.59369 c
700.88293 540.82617 700.88293 536.33917 703.65045 533.57172 c
706.41791 530.8042 710.90491 530.8042 713.67242 533.57172 c
S
571.94012 250.10712 m
574.70764 252.87462 574.70764 257.3616 571.94012 260.12909 c
569.17261 262.89661 564.68561 262.89661 561.91815 260.12909 c
559.15063 257.3616 559.15063 252.87462 561.91815 250.10712 c
564.68561 247.33961 569.17261 247.33961 571.94012 250.10712 c
S
571.94012 391.83942 m
574.70764 394.6069 574.70764 399.09387 571.94012 401.86139 c
569.17261 404.62888 564.68561 404.62888 561.91815 401.86139 c
559.15063 399.09387 559.15063 394.6069 561.91815 391.83942 c
564.68561 389.0719 569.17261 389.0719 571.94012 391.83942 c
S
571.94012 533.57172 m
574.70764 536.33917 574.70764 540.82617 571.94012 543.59369 c
569.17261 546.36115 564.68561 546.36115 561.91815 543.59369 c
559.15063 540.82617 559.15063 536.33917 561.91815 533.57172 c
564.68561 530.8042 569.17261 530.8042 571.94012 533.57172 c
S
430.20782 250.10712 m
432.97534 252.87462 432.97534 257.3616 430.20782 260.12909 c
427.44034 262.89661 422.95334 262.89661 420.18585 260.12909 c
417.41837 257.3616 417.41837 252.87462 420.18585 250.10712 c
422.95334 247.33961 427.44034 247.33961 430.20782 250.10712 c
S
430.20782 391.83942 m
432.97534 394.6069 432.97534 399.09387 430.20782 401.86139 c
427.44034 404.62888 422.95334 404.62888 420.18585 401.86139 c
417.41837 399.09387 417.41837 394.6069 420.18585 391.83942 c
422.95334 389.0719 427.44034 389.0719 430.20782 391.83942 c
S
16 0 0 17 118 104 cm
BI
/Width 48
/Height 51
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcG9?JcG9?JcG9?JcG9?`W,r'rlY5DrhBC\rh07krl+lsaT'Zfrr)i;re(2Fjtm!*rce@RrqP"CfDkjD
rhTNce2.(grfd?JgAfn,rj;Ypa><fXrh'2ei;_a8rpTi']JKOhrnlc9j8],2r^aIRr]C+ok5XTDrlk@+
YVZ8:rikYel2Ub7r]R8;r\a\dm/QGPrp'JOUbi!0rmL98n,NCdraq`Xr_3=_o)J1Yrhl,>rds_@o)J^X
r]cc+r\XW)p&FU_rf`L$rbhE/p&G$ar]cH"rnI5Jp&G#tN&1Hnq#C$erbRNLr^chaq#C?jr]>rmrn[JO
q#C?@L,8h0qu?Hkri_&4re^OPq#C>VL,8gFqu?Hkre#q]ra,L%q#C>>L,8g/qu?HkrdKSXr`T-uq#C>L
L,8g=qu?Hkrh"p$rd4PBq#C?-L,8gsqu?Hkroo.nrl"^6p&G"eN&1Gkrq$$ep&G#PN&1HKq#C$ern!)b
rj2D"o)J]!Ou*)+rqZ?ho)J^-Ou**0p&FL\rbIlWr_<Cfp&FL\ro*i<Rkt&]o)J(Vri_nLrep7Fl2Ua;
Ubi!^rqc*`l2Ub]rcP4sr`T6lm/Q5JrqubFYVZ8grq#CSi;`eJr\h;Crdt.Fk5X9;rm:XC_DD0[rjgte
gAh0LrhKH]c85G^rf@'Mh>c")rqZPrraPj`h)#%1rh'2[fDj%orosEhre:>^r^m)Or\XU9r^HfnrdOjI
rnl$$JcG9?JcG9?JcG9?JcG9?J,
~> %APLeod
EI
16 0 0 17 260 104 cm
BI
/Width 48
/Height 51
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcG9?JcG9?JcG9?cN!n8ric<:r_<ALrZ(n@rXSoTr]gBare(3rbQ$2orq$,Rr^Qklh#REnrb)5FeGnA)
rqQJRrY<TVr^-V*gAg+2rh'01nc8XrrYb\[r[@atr\FI,r[[sprZM1RrWMclr_NOHi;_s>rqHCso`4sr
rZ;%ki%t?fr[7[[rW2corXSq6j8\BDroO,;p]19srZ;%od51bQrY"u+rW<(Rk5XfJrm(K\p]1:.r\;AJ
r[IgOp]1:rrql'^n,NCLrYkY6rW3!>]JKO?rXJW&rb_$%o)J^ar\s]SrWE-H[PRn<rY>2.rg`HWo)J\q
qZ-Trr[+a'rY#).rW`A?o)JC_rhK5grZ8'qr\=BZqZ-U6rq5saq#C?hrZV.=rY2.ar[n*PqZ-VOp&Fge
rfm9[rWN3STelZiqZ-U-rpTX^qu?ZgrYYM4rZ.Rdr\FHYqZ-VAq#C6krgN]arW`?VRkt$fqZ-U)rqZHk
qu?XiqZ-U9Qo"^srWi<#rjr",rr;ulrX/N&r[a<jrYPG3rbhW5rr;u*qZ-U$Ou*(aqZ-U>qu?Zqrc@r:
rYUeSr\FHTqZ-WRrr;utr`8mrrZR=YrXAZ(rkna8rr;s]qZ-UBO#-bHqZ-Vqrr;utr[%FAr[X$crY>;1
rf[9\rr;s-qZ-ULO#-bRqZ-VBrr;utrYbS5r[s6frYYM4reCFPrr;sQqZ-UEO#-bKqZ-Verr;utr_!%f
rZmO\rXSf*rjVn,rr;t-qZ-U:O#-b@qZ-WBrr;utrfI!WrXb5Kr[n!IrWrMrrr;utrnRANrW<'RPr&C\
qZ-Uequ?Qnr[@XDr[!gcrX\l+rg!B\qu?Y:qZ-U.Qo"^nrW2lrro!\Rqu?Z?p]1:CRkt$XqZ-UVq#C-h
r_`OmrXYSVr[e$LqZ-W0q#C-hrmguLqZ-UBTelZ[qZ-Uap&F^bra5O&rWW9QV_e;mp]1<:p&F^bro<tm
qZ-U&r\:N2r[%=>rata$o)J^+rWW0!rY#2cZSVS2rWE#tr]C,To)J1YrgEN]rXSo]\MO42rWE#trZ2"%
n,MbSrbM9/rWiEQ^GGj/p]1:#rlsg0m/R(ardXnJqZ-TtrZ(nlb;9,JrXei)rZ;'al2ToGriQ/-p]19s
rZD+pf/*CXrY+r)r]L2Ek5XKArmC]ko`4sprY5>Vr\<Xnr[e$hrXSo.p]19orb;B.j8\';rqcV\rYk>-
rW3!)rXSo@rYYVMrXo,<rW_fkr^m+8h>c4/rq?>JrYO&arW3!`rkm@feGoOHrl>"br\*C6rX8^%rgWoL
dJq;frp0R/rjD`rreCE5rhob2rn.5GaT$hknc+1?nc++
~> %APLeod
EI
17 0 0 17 401 104 cm
BI
/Width 51
/Height 51
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcFs6JcFs6JcFs6aT)89rkAASr_i_UrZV.FrZ_>&r_rf?rkSO1bQ#uirqubmr`/q.h#REcr`K0!rr(@H
fDkjLri5rFb5hMkriXlQgAh/cr\F$ErWiE<rZ_=hr[dq$r[e$rrZ_=VrW_onr\a\kh>c=2re:=Qp]19q
rYkbdh)#$[rYb\;p]19qrf#e8j8],Pr`AjprW<'9r\2_Ur\+6frW;ipra#Ntk5XTDroj>9p]1:&r[u/G
r\"0Yp]1:Orp/hKl2UbYr]0`RrYGJg^GGjErY>2.r]pJ[m/Q>MraPX&rZAI&rZ:h7rbCg"m/R'Hp]1:6
XY]qrp]1;]n,MkVrmLcJqZ-U0V_e;bqZ-U!rn-fAn,NA]qZ-U'r\CB-r\=BZqZ-Uqo)J:\rl4^5r[OTt
r[I^ErW3#Cp&FU_r]p>\rY(bWrXo#-r^c_^p&G$8qZ-Trr[aNpr[[aDrm^`Cp&G#@qZ-U/Pr&COqZ-VO
q#C$er\XKPrZ[U`rZV.=r]KuUq#C?VrW2uurW3!PPr&CmqZ-TtrpBU_q#C>iqZ-U)O#-bDqZ-Vtqu?Hk
reUFOrYLVOrYGA2rfR*Xq#C>4qZ-U8O#-bSqZ-V?qu?Hkr`AssrZR=YrZD";ra>X'q#C=ZqZ-UBO#-b\
qZ-Uequ?Hkr_*+grZdI[rZ_4>r`&dpq#C>(qZ-U;O#-bUqZ-V3qu?Hkrd=SCrYghRrYYM4re:7Lq#C>Y
qZ-U0O#-bJqZ-Vdqu?HkrknU5rW\NAr\FHUqZ-W=qu?Hkrqua.qZ-UFPr&CfqZ-U4rr2fpp&G"pqZ-U7
Pr&CWqZ-V)q#C$erhfPmrWrKYRkt%!rWi<#riZ%rp&G$\rX\l+rZI[drZ:q:rY,;'q#Bpbre1.KrW`?W
Tel[&rWW0!rf$OMo)J^]rYGA2rZ%UfrYt_7rYtk2p&FL\rfR'XrW3!GV_e<!p]1;]o)J1YrqZOKqZ-Tu
r[k6.r[e$OqZ-UTrql9dm/R(ErYPG3rX/WYZSVS7rX&H%rYtk"n,MYPrl+j@qZ-U$r[bT9r[[sQqZ-U$
rlXU-k5YFOp]19qr[#<8rZqIFqZ-TrrhSfYj8]+WrX&?"rYPPeb;9,MrYG8/rXAe/k5XB>rltE_p]19p
rYkbif/*C[rYb\:p]1::rmKj,h>dK=r]p,VrWE-3rZM1nkqi;krZM1PrW;`mr^QnRi;_F/riuGSmf<=m
rXJi>q\T5ErXJi4mf<>@rjLP\eGoOHrhTN@d/a.qri#hqfDj%ormq(+r]^;aklC\cr^$OCrn,Nr_Z0W+
rmUkXrhBCKreg]Mrk&0Zrq",/JcFs6JcFs6J,
~> %APLeod
EI
16 0 0 125 118 121 cm
BI
/Width 48
/Height 375
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?[f?@+rklUh[f??W^At_Brmea`[f??W^At_Brmea`[f??W^At_Brmea`
[f??W^At_Bro<u%_B=F0nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?
nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc+1?nc++
~> %APLeod
EI
16 0 0 125 260 121 cm
BI
/Width 48
/Height 375
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?
JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?JcG9?J,
~> %APLeod
EI
16 0 0 16 118 246 cm
BI
/Width 48
/Height 48
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
^]4<1roO.+ro*kO_Z.p]rqZQ(rb_WgrYGJ7o`4t(r[RnTri?%gdJq_rrk/5-rX@K\rWW9grhTPlgAfn,
rlG(*klC\drX&Q.rW2?cr[e&Rh>cF5roX2Vnc8XprYPP\r\"1*oeZS#r[@aarX/2rr]'o(j8\0>rlY3Y
p]19orY>D`g,&^\rYkb<p]1:$ri>2]k5YFUrWr9!rY#2]c85GQrYPP7qZ-TrrdFeFm/Q>MrdabDrWN3I
_DD0ArWr9!r`/srn,MbSrhT;hrX&QT]JKO@rX\c(rc[c1n,NC1rWrB$rX\u^[PRn<rYG8/rh]2co)J^P
rYt_7rX&QXYVZ86rXer,rWrMHp&FU_r`&aprWN3OW\aW.rX&H%r[IjEq#C$erltECqZ-UBUbi!$rWE#t
rh&ucp&G"]qZ-U-Shp?bqZ-U;rqZHkq#C?/p]1:DShp@#rWN)urf[0Yq#C=qqZ-U0Qo"^^qZ-UEqu?Qn
rql[+qZ-UFQo"^rrW;rsrn[SRqu?Z2qZ-U"Ou*(KqZ-VYrr;lqrcJ#;rY:SPrZD";r^Qnequ?XTqZ-U@
Ou*(iqZ-U&rr;lqrZD";r[a*drW;rsrpfmcrWi<#r\9HirWi<#rn.5MrpKX`rWA*8rXAZ(rkSO5rn@5L
rWeB<rXer,riH,!rp0F]rWA*8rXJ`)rk8=2rr2m#qZ-UNO#-b@qZ-WHqu?X8qZ-UIO#-b;qZ-W`qu?XQ
qZ-UBOu*(jqZ-U$rr;lqrb_N4rYL_RrZM(<r]^>]qu?Z*qZ-U$Ou*(LqZ-VQrr;lqrqQI#qZ-UHQo"^s
rWE#trmq)Kq#C=iqZ-U3Qo"^aqZ-U>qu?Hkrj2J%rW3!MShp@$rW`6"re:7Lp&G"PqZ-U0Shp?dqZ-U3
rq-*fp&G$,p]1:BUbi!&rWN)urf['Vo)J\ZqZ-U"r[t3,r\FH]qZ-U;rqZ?ho)J^ErXo#-rXAc]XY]qj
qZ-Ttrk%k'n,NC!rWE#trY,8dZSVS"p]1;To)J(Vrf?gSrXJi[]JKOArY5,-raG9ql2U`qp]19tr[Pc@
r\"0Xp]1:YrqZ$_k5YF;rW;rsrW3!7r\)PQr\=BlrWMurraYs'm/Q,GrjD_9p]19qrYkbig,&^_rZD+D
p]19rrfZFDi;`f.r\jELrW3!-rZ(nfr\Epur[n*krXf&1o`4t8rk7@lgAh/Ur[[F;rW3!%rX/W7rX8]0
rW2HfrYb^$rqbRQfDkjKrh9<LrW1UNr[Ii(rq>(GcN!n.rh'0grYGJ6mf<=ur^HgKrnZ!%_Z0W3ro="$
rjMgGrnm_L`W(Mhnc++
~> %APLeod
EI
16 0 0 16 260 246 cm
BI
/Width 48
/Height 48
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
_Z0W7rp'L2rnRMF^]2^]rr)i;rd=])rYth>o`4t#r[%P@rg`uNcMuMrrm^pUrYF2frW3!Trf$jMfDj\,
rndW[rW;EdrWN3,rWiE(li@#&rg*Q[h>cO8rq?>.rWVrprWW98rZhCor\F.&r\4=$rZ1tIrW2ZlrZ_?J
i;_s>ro<u6o`4t&r[?JVr\4<nrW`,trW3"Nj8\BDrl+jQp]1:&r[?&Jr\=BlrWMurr`/sjl2U,MriH)'
qZ-TrrZB!5r\+6\p]1:IrpT4Rn,NC3rX&H%rWN3J]JKOBrYP>0r^Ztcn,MtYroj>%qZ-U$r[kH4rZCn8
rc@Q.p&G$er]BuWrWE-NXY]qpp]1;eo)JC_reL7Kr["R#r\FHbqZ-U'roj%Tq#C?^rXo#-rZ%^ir\=BX
qZ-V4p&Fgerd"A@rWrKYTelZoqZ-U"ro!SOqu?ZZrX8T'rZ[gfrXAZ(ra>O$qu?YQqZ-U&Qo"^hqZ-U!
rpfmcqu?XZqZ-U<Pr&CHqZ-Vrqu?ZqrpKagqZ-UKPr&CXqZ-V&qu?ZqrhoVnrX4lFr[I^ErYGM3rr;ut
rbMB2rYghRrWW0!rn.5Mrr;spqZ-U>O#-bEqZ-W0rr;utr]0iUr[3a_rXo#-rhf\prr;s?qZ-UHO#-bN
qZ-VTrr;utrXJ`)r\0BhrYkY6rd+SDrr;s=qZ-UIO#-bOqZ-VRrr;utr\jWRr[<g`rY#).rhKJmrr;sn
qZ-U?O#-bEqZ-W.rr;utrb20/rZ$tTrW`6"rmh#Jrr;tiqZ-U)Ou*(eqZ-U,rql]prr;u^rW2uurW3!P
Pr&CYqZ-Utqu?Qnr\s]SrZ[U`rXAZ(rhTGkqu?YIqZ-U)Qo"^kqZ-Ttrp9O^qu?ZQrW`6"r["$irX\l+
r_iOkq#C>0qZ-U&Shp?nqZ-TsrmplEq#C?VrX/N&rZJ!mr\FH\qZ-V&p&F^brd"A@rW3!HV_e;eqZ-U"
rnmDKp&G$_r[dpHrWW9RXY]qtp]1;Qo)J:\rn[PeqZ-U'r\(T6rZqIDqZ-V%n,MkVrk8:6qZ-U#r[YN8
rZ(\5r\jcNn,MbSrg<ZcqZ-TsrZo?:r\=Bbp]1:9roNMHl2UaerXAQ%rY#2]c85GTrZ_=Hp]1:Xrp/hK
k5YG1rZ_+;rW3!5r[lh[r\FHurX/;urb;B.k5XKArpB\`nc8XrrYb\`r\Epur\+6prY,86o`4t(rgVjG
h>dJrr^6#PrWN3,rXSo9rWiE(mf<=qrd=_7h>c+,rk/5#rW^sSrYtiWror&7dJs4;riZ60rZ;%@mf<=p
r\sh.rm&gh`W,r9roj@-rj_sDrn@AB_Z,2enc++
~> %APLeod
EI
17 0 0 16 401 246 cm
BI
/Width 51
/Height 48
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
\c;Ztrmq)#rpRN"aT)7krepbCrZM1Fo`4ssrZM2.rf7!2bQ#uiroX3%rZg"pr[%Pfroqr4fDkj<rce>K
li@"eq[!0'li@"mrd=_7gAg"/rr2nVrXe`&rWE-3rZM1kr\=(%r\=C'rZM1OrW;`mrY#3nh>cF5rq-1h
o`4surZqIuh)#$crZhCLo`4tprqGIQj8],:r\+$HrWrKIc85GTrZ_=Hp]1:MroE5Ak5YG-rY>2.rYPPh
`A@KKrY>2.rYYXbl2U#Jrp'J)qZ-TrrZJa-rZD+?qZ-U?rpK.Qm/R(]r]^2ZrWE-JZSVS.rW;rsr^?b`
n,MbSrb)!+r["[&rZh1<rbq9*n,NBtp]1:5V_e;jp]1<0o)J1Yr\OEOrXtn\rXer,r]B]No)J]jqZ-Ts
r[sm#r[n*MqZ-W&p&F^brquaDqZ-U4Rkt$ZqZ-UKrr2]mp&G$(qZ-Ttr\'`sr\+6PqZ-W7q#C$erc.f8
rYCbTrY550rd";=p&G";qZ-UAPr&CbqZ-UIq#C-hrn7/KrW<'SPr&CorW2lrro*bSq#C>aqZ-U,O#-bG
qZ-Vlqu?Hkre1.KrYU\PrYPG3rf$aSq#C>/qZ-U9O#-bTqZ-V:qu?Hkr_r[orZ[CZrZM(<r`f:"q#C=X
qZ-UBO#-b\qZ-Ucqu?Hkr_WIlrZdI[rZV.=r`K'tq#C>-qZ-U:O#-bTqZ-V8qu?HkrdjqHrY^bQrYPG3
re^OPq#C>^qZ-U-O#-bHqZ-Viqu?HkrmCTCrWE-TPr&CprW;rsrn@8Lp&G"4qZ-UCPr&CcqZ-UAq#C$e
rb;60rYUnVrYGA2rc.`5p&G$!qZ-U!r\9lur\4<SqZ-W/q#C$erqZO7qZ-U7Rkt$]qZ-U@rqlKjo)J]\
qZ-Ttr\'s$r\+6PqZ-Vmp&FU_rquaDqZ-U2TelZ^qZ-UKrr2Tjn,NBfp]1:9V_e;op]1<#o)J1Yrr2mq
qZ-Trr[=m)r[7[GqZ-V"n,MbSrq-1BqZ-U!r[Y<2r[RmMqZ-UPrqGm]l2Ub?rY550rWE-G\MO41rW;rs
rYYXqm/Q5Jrk\RAp]1:5^GGj.p]1:&rl=:'j8],*rZCn8rXJiTb;9,FrXAQ%rZhElk5XB>rp'JHo`4t&
r[HGTr[IgWo`4tYrpAbGh>dKNrc7uAo`4srrYGJZr\<jtr\=BurYGJ<o`4srrcnG?i;_F/rndW[rW;Ng
rWE-*q[NN1rWDThrWE..ro)T2dJs3qr`]:2f)Yd]ra#NTeGm_lrqcW-rc.ocrW_fkrWiEPrcA(Rrqk"@
]`7uurm^hXrmh#8^]/lbkl6/
~> %APLeod
EI
16 0 0 16 118 388 cm
BI
/Width 48
/Height 48
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcG9?`W,r7roF(%rj2TqriZ7@rnm_LaT'QcrmUk%r]C)]klC]7rd"L^rr(@HfDkjDre^Ure,]I]rc8#'
gAg"/rqcV\rYk5*rWW9.rX\uArXf&:rW`?&nc8XurdOk:i;_a8rl>!_o`4snrY#2Rr\*Uor\=BtrY>D9
o`4t)ri"lWj8]+NrWi2urWW9Cr\E(]rZqILo`4u;rr)*]l2Ub\rc%W4rWE->r\;\Sr\FHrrWi2ur_<C_
m/QGPrr2mpp]1:"r[kuCr\4<^p]1:HrpoOXm/R'3p]1:*r\;&Ar\FHip]1:hrr2Kgn,NBdp]1:0YVZ8$
p]1;@o)J:\rm:WOqZ-U+r\CT3rYYD1ri>_lo)J\MqZ-U$r\1?.r\FH`qZ-U3rq-!cp&G#tqZ-Trr[Xd#
r\4<UqZ-VLq#C-hrr2mLqZ-U3Shp?gqZ-U,rpK[`q#C>kqZ-Tsr\'j!r\FHYqZ-V@qu?Hkr^lterY_(Z
rZ_4>rYtb7qu?ZgrWrB$r[jKnr\FHUqZ-WArr;lqriu>#rX"`DrY,//re(4Mqu?Y,qZ-U4Ou*(]qZ-US
rr;lqr\F?Nr[3jbr\43LrWW<#qu?X6qZ-UIO#-b;qZ-W^rr;urrWN)ur\BNjrWrB$rmUlHros:[rWJ09
rXJ`)rk&10rnI;MrWeB<rXer,riQ2"rp]dbrWA*8rXAZ(rkeR4rX&H%r\9HirWi<#rnI>MrZV.=r[a*d
rW;rsrq$$er]L&XrZdR^r[dpHrXSr-qu?YCqZ-U0Ou*(XqZ-Uirr;lqrl=m9rWSH@rXSf*rgEccqu?Zo
rY>;1r[F3jr\4<PqZ-WVrr;cnra5O&rXkMRrYt_7r\=<Mq#C?;rW2lrr[FEpr\+6QqZ-Vfqu??hr`&ap
rXYSVrYYM4r[IjEqu??hrn%,OqZ-U>Ubi!"rW;rsriGnpo)J\uqZ-Tsr[Op(r\+6TqZ-UPp&FU_rp]n6
qZ-U"r\(K3r\FH^qZ-U+rn-oDn,NC>rX\l+rX8]Y[PRn;rY#).rW<)-o)J(VrjMe-qZ-U"r[GK9r\"0X
p]1;Nn,MYPrg*NcqZ-TsrZ]38r[@aLp]1;0m/Q5Jrj_q=p]1:&r[?&Jr[e$]p]19rrfuaJj8],3r[@F>
rXf&Vr\E:cr[Rm^rW2corY5@Hk5XB>rp]o#rWVrprWE-4rZV7ir\"1*q_S4)r[RmlrY>D:nc8Ybrnlc9
gAh0-r`]:&klC\crW26`r^-V*h>c")rmLd[rZ0\mrY#37rk-k_bQ%Rhre:>Br\"0brW2lrrXo,Yr^-U/
rkna5dJplZrql]ZrqO8.J,
~> %APLeod
EI
16 0 0 16 260 388 cm
BI
/Width 48
/Height 48
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcG9?aT)8<roj@.rjVm"ri,n6rn@AC`W+?cro*jBr_!.qklC])rbDG@rqFh?gAh0NrhTNHe,]ITr`]<S
fDj\,riuGSmf<=irX&Q6rY,8CrXAc2rW;WjrWN42ro2c6j8],;r]BcQrW3!/rZ;%jlneVrr[7[^rWr/s
rWiFTrr1sXk5YFurYG8/rW<';r\2q[r[IgVo`4thrq,@Ql2UaOrWW0!rW3!7r\)GNr[.UPp]1:Frnlu?
m/R':p]19sr[>W>r\FHhp]1:-rnHf>n,NBhrW2lrrX/WV\MO4.rW2lrr[Ij:n,MtYrmC]QqZ-U*r\:`8
r[@aIqZ-Uhrr)Efp&G$XrZM(<rWrKWXY]r#p]1;>o)JC_rbVH3rWE-MV_e;iqZ-TtrmpcBq#C?NrW`6"
rZe3pr\FH_qZ-Uop&Fgera5O&rX>ASr[IUBrlb*:qu?ZIrW;rsr[40krY#).r^Q\_qu?YBqZ-U+Qo"^m
qZ-Trroa1Yqu?XKqZ-U?Pr&CKqZ-Vcqu?Zqro<kUrW3!QPr&C[qZ-Ulqu?Zqrg<Q_rXP)Ir[dpHrXAf$
rr;utraks,rZ.%UrWi<#rmLfGrr;skqZ-U?O#-bFqZ-W+rr;utr\XKPr[<g`rY#).rh9>krr;s:qZ-UI
O#-bOqZ-VOrr;utrXJ`)r\0BhrYkY6rd+SDrr;sBqZ-UHO#-bNqZ-VWrr;utr]BuWr[3a_rXo#-ri#hr
rr;ssqZ-U>O#-bDqZ-W3rr;utrbqZ6rY^kTr\FHUqZ-WNrr;utriZ+urX+fEr[7RCrZ(h8rr;uhrW`6"
r[sHlrYYM4rb)-.qu?XbqZ-U;Pr&CGqZ-W%qu?Qnrf[-YrWrKYRkt$iqZ-U%rq60gqu?ZarXer,rZI[d
rX/N&rbVB0q#C>JqZ-U"r\:*&rZ_4>rX8_hq#C-hrq67-qZ-U4Ubi!'rW`6"rd+8;p&G#Up]1:;W\aW0
rXJ`)rXo.up&F^brr)ghqZ-Tsr[Fs*rYGA2rW<)*o)J:\rpft9qZ-U"r[P61rYkP3reKtBn,NC@rXer,
rW<'D]JKOArY"u+r`JOem/R(!rXS]'rYkbk`A@KFrX/E#r^-VXm/Q>Mrmq&op]1:!rZf]Er\+6frW;ip
rbVT2l2ToGrpKbSo`4t!rZhCsh)#$^rYkb<p]19trgVsJj8],Vre:=]o`4smrX\uLr[@atr\F@,r\4=%
r[%O\rX&,qr\jbri;_X5rpB]-rX%fhrWN3%klC]4riXuTfDkj3rd"Jog&V*Yr_3<err(IKcN!n%rfmCY
r\ONlrWN)urXAcPr]U6prj;[ucMtZZrr)i]rq*l'J,
~> %APLeod
EI
17 0 0 16 401 388 cm
BI
/Width 51
/Height 48
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcFs6^]4<#rmh"\rhTOirk8<^rpIZ'bQ%S/rh]TsrXnAprY,98rhobacMu;lrkA@trWCaPrWN3hrkd1b
fDkinr^H8UrWE-*rXJ`;rXJi4rWDThr^m+7gAg"/rq$+mnc8XtrYthdkqi;grYkbDo`4slra>`ui;_a8
rndW+p]19orY5>`f/*CXrY+r)r\=E3j8\0>rkA@Fp]1:+r[c5Kr[[s[p]1:/rkmmuk5YFbrWN)urW3!A
^GGj2rW2lrrW`A2l2U#JrmUiTqZ-U!r[><5r[7[JqZ-U+rn6Z<m/R(PrZ_4>rWiETZSVS4rW`6"r[7^7
n,MkVrqua^qZ-Ttr[Y*,r[RmKqZ-Uerr2Kgn,NBZp]1:=V_e;rp]1;ko)J:\rqZO8qZ-U5TelZaqZ-UA
rqlBgo)J]OqZ-Tur\:*&r\4<SqZ-V`p&F^brq67+qZ-U9Rkt$`qZ-U7rqQ9gp&G#nqZ-U"r\Bs!r\=BU
qZ-W(q#C$eraPa)rY^tWrYYM4rbD6.q#C?mrYPG3r[=$fr[7RCrZ:k7q#C?9qZ-U!r\B`pr\FHTqZ-WD
qu?Hkrg3K^rY(>KrXo#-rh')fq#C>CqZ-U5O#-bPqZ-VNqu?Hkrau$-rZ7+VrZ1k9rbhW5q#C=gqZ-U?
O#-bYqZ-Urqu?Hkr]p>\r[*[^rZq@@r^cqdq#C=nqZ-U>O#-bXqZ-V$qu?HkrbhT5rZ.%UrYt_7rc\2=
q#C>JqZ-U4O#-bNqZ-VUqu?Hkrh92hrXY&GrXJ`)ri,epq#C?OqZ-Tsr\9Zor\4<PrW)ouroa1Yp&G"B
qZ-U@Pr&C`qZ-UPq#C$ercn;?rY1VRrY,//rdaeDp&G$0qZ-Tsr[sZrr[n*MqZ-W>q#C$err2mQqZ-U1
Rkt$XqZ-UVp&FU_rjhn+rW3!LTelZup]1<0p&FL\r]g8[rX\u`V_e<-rXJ`)r^ZPZn,NC,p]1:1V_e;f
qZ-Trrlt$6m/R'3p]1::XY]r!p]1;Gn,MbSrr2mlqZ-TsrZng+rZhCCqZ-Uqm/Q>Mrpp%=p]1:4\MO4'
p]1:Irq5XXk5YG:rZV%:rY#2b`A@KIrXno*r[%R&l2TfDrp9VMp]19srZ;%od51bVrZ1t@p]1:_rpT"L
i;`fRrbM0,rW`?Dr\*(`r\+6lrW`#qrc8#9j8[j5rh]T8nc8XtrYthar[e%'q_S4+r[e$rrYthFnc8Y4
ri4fSfDkjFrf@$nklCS_klC]"rfmEXgAfS#rq$,Jr]C)]h#REVr]U7Arq4e@aT)8+rhKHsr]'m!rWi<#
rWrKGr]'m_rhf\_bQ#$NrpKdS\c70
~> %APLeod
EI
1 0 0 -1 -299 651 cm
430.20782 533.57172 m
432.97534 536.33917 432.97534 540.82617 430.20782 543.59369 c
427.44034 546.36115 422.95334 546.36115 420.18585 543.59369 c
417.41837 540.82617 417.41837 536.33917 420.18585 533.57172 c
422.95334 530.8042 427.44034 530.8042 430.20782 533.57172 c
S
2 w
[
8
8
] 0 d
313.37244 396.8504 m
806.31262 396.8504 l
S
0 i
CM
516.9126 254.14961 m
507.31259 257.7496 l
507.31259 250.54961 l
h
516.9126 254.14961 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -299 651 cm
815.9126 396.8504 m
806.31262 393.2504 l
806.31262 400.45038 l
h
815.9126 396.8504 m
S
CM
4.772439 254.14961 m
14.372439 250.54961 l
14.372439 257.7496 l
h
4.772439 254.14961 m
f
1 0 0 -1 -299 651 cm
303.77243 396.8504 m
313.37244 400.45038 l
313.37244 393.2504 l
h
303.77243 396.8504 m
S
1 J
1 j
[
8
8
] 0 d
0.60000002 i
566.92914 636.23389 m
566.92914 160.30157 l
S
0 i
CM
267.92914 500.29843 m
264.32913 490.69843 l
271.52914 490.69843 l
h
267.92914 500.29843 m
f
0 J
0 j
[] 0 d
1 0 0 -1 -299 651 cm
566.92914 150.70157 m
563.3291 160.30157 l
570.52911 160.30157 l
h
566.92914 150.70157 m
S
CM
267.92914 5.1661239 m
271.52914 14.766124 l
264.32913 14.766124 l
h
267.92914 5.1661239 m
f
1 0 0 -1 -299 651 cm
566.92914 645.83386 m
570.52911 636.23389 l
563.3291 636.23389 l
h
566.92914 645.83386 m
S
6 w
1 J
1 j
0.60000002 i
0.016804177 0.198351 1 sc
569.76379 394.01575 m
690.28613 273.49341 l
S
0 i
CM
398.35718 384.57767 m
382.80081 377.50659 l
391.2861 377.50659 l
391.2861 377.50659 l
391.2861 369.0213 l
h
398.35718 384.57767 m
f
0 J
0 j
1 0 0 -1 -299 651 cm
697.35718 266.42233 m
681.80084 273.49341 l
690.28613 273.49341 l
690.28613 273.49341 l
690.28613 281.9787 l
h
697.35718 266.42233 m
S
ep
end
%%Trailer
%%EOF
